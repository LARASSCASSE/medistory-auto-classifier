#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
G√©n√©rateur de documents m√©dicaux PDF pour tester le syst√®me M√©distory
"""

from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.lib.units import cm
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import random
import os
from datetime import datetime, timedelta

# Listes de noms fran√ßais r√©alistes
NOMS = [
    "DUPONT", "MARTIN", "BERNARD", "THOMAS", "ROBERT", "PETIT", "DURAND", "LEROY",
    "MOREAU", "SIMON", "LAURENT", "LEF√àVRE", "MICHEL", "GARCIA", "DAVID", "BERTRAND",
    "ROUX", "VINCENT", "FOURNIER", "MOREL", "GIRARD", "ANDR√â", "LEFEBVRE", "MERCIER",
    "DUPUIS", "LAMBERT", "BONNET", "FRAN√áOIS", "MARTINEZ", "O'BRIEN", "M√úLLER"
]

PRENOMS = [
    "Jean", "Marie", "Pierre", "Sophie", "Luc", "Anne", "Fran√ßois", "Isabelle",
    "Michel", "Catherine", "Philippe", "Nathalie", "Alain", "Sylvie", "Olivier",
    "Martine", "Christophe", "V√©ronique", "Patrick", "Dominique", "√âric", "Monique",
    "Jacques", "Nicole", "Claude", "Fran√ßoise", "Bernard", "Chantal", "Andr√©", "Christine"
]

MEDECINS = [
    "Dr. ROUSSEAU", "Dr. DUBOIS", "Dr. LAURENT", "Dr. CHEVALIER", "Dr. BLANC",
    "Dr. LEROUX", "Dr. FAURE", "Dr. GIRAUD", "Dr. MERCIER", "Dr. ROGER"
]

MEDICAMENTS = [
    "Parac√©tamol 1000mg", "Ibuprof√®ne 400mg", "Amoxicilline 500mg", "Doliprane 500mg",
    "Efferalgan 1g", "Advil 200mg", "Augmentin 1g", "Dafalgan 1g", "Spasfon 80mg",
    "Kard√©gic 75mg", "Levothyrox 75¬µg", "Crestor 10mg", "Inexium 40mg", "Mopral 20mg"
]

EXAMENS = [
    "Num√©ration Formule Sanguine (NFS)",
    "Glyc√©mie √† jeun",
    "Bilan lipidique complet",
    "TSH - Hormone thyro√Ødienne",
    "Cr√©atinin√©mie",
    "Transaminases (ASAT, ALAT)",
    "CRP - Prot√©ine C r√©active",
    "Vitamine D",
    "Ferritine",
    "HbA1c - H√©moglobine glyqu√©e"
]

def generate_ordonnance(file_path, patient_nom, patient_prenom):
    """G√©n√®re une ordonnance m√©dicale"""
    c = canvas.Canvas(file_path, pagesize=A4)
    width, height = A4

    # En-t√™te
    c.setFont("Helvetica-Bold", 16)
    c.drawString(2*cm, height - 2*cm, "ORDONNANCE M√âDICALE")

    # M√©decin
    medecin = random.choice(MEDECINS)
    c.setFont("Helvetica", 10)
    c.drawString(2*cm, height - 3*cm, medecin)
    c.drawString(2*cm, height - 3.5*cm, "M√©decin G√©n√©raliste")
    c.drawString(2*cm, height - 4*cm, "123 Rue de la Sant√©, 75013 Paris")
    c.drawString(2*cm, height - 4.5*cm, "T√©l: 01 23 45 67 89")

    # Patient (format attendu par le syst√®me)
    c.setFont("Helvetica-Bold", 12)
    c.drawString(2*cm, height - 6*cm, f"Patient: {patient_nom} {patient_prenom}")

    # Date
    date = datetime.now() - timedelta(days=random.randint(0, 30))
    c.setFont("Helvetica", 10)
    c.drawString(2*cm, height - 7*cm, f"Date: {date.strftime('%d/%m/%Y')}")

    # Ligne de s√©paration
    c.line(2*cm, height - 7.5*cm, width - 2*cm, height - 7.5*cm)

    # Prescriptions
    c.setFont("Helvetica-Bold", 11)
    c.drawString(2*cm, height - 9*cm, "Prescription:")

    y_pos = height - 10*cm
    nb_medicaments = random.randint(2, 5)
    medicaments_prescrits = random.sample(MEDICAMENTS, nb_medicaments)

    c.setFont("Helvetica", 10)
    for med in medicaments_prescrits:
        c.drawString(3*cm, y_pos, f"‚Ä¢ {med}")
        y_pos -= 0.5*cm
        posologies = ["1 comprim√© matin et soir", "1 comprim√© 3 fois par jour", "1 comprim√© au coucher",
                      "2 comprim√©s matin, midi et soir", "1 comprim√© par jour"]
        c.drawString(4*cm, y_pos, random.choice(posologies))
        y_pos -= 1*cm

    # Signature
    c.setFont("Helvetica-Oblique", 9)
    c.drawString(width - 8*cm, 4*cm, "Signature et cachet du m√©decin")
    c.drawString(width - 8*cm, 3.5*cm, medecin)

    c.save()

def generate_resultat_labo(file_path, patient_nom, patient_prenom):
    """G√©n√®re un r√©sultat de laboratoire"""
    c = canvas.Canvas(file_path, pagesize=A4)
    width, height = A4

    # En-t√™te laboratoire
    c.setFont("Helvetica-Bold", 14)
    c.drawString(2*cm, height - 2*cm, "LABORATOIRE D'ANALYSES M√âDICALES")
    c.setFont("Helvetica", 9)
    c.drawString(2*cm, height - 2.5*cm, "BioM√©d Paris - 45 Avenue de la R√©publique, 75011 Paris")
    c.drawString(2*cm, height - 3*cm, "T√©l: 01 98 76 54 32 - Email: contact@biomed-paris.fr")

    # Patient
    c.setFont("Helvetica-Bold", 11)
    c.drawString(2*cm, height - 4.5*cm, f"Patient: {patient_nom} {patient_prenom}")

    # Dates
    date_prelevement = datetime.now() - timedelta(days=random.randint(1, 5))
    date_resultat = date_prelevement + timedelta(days=1)
    c.setFont("Helvetica", 9)
    c.drawString(2*cm, height - 5*cm, f"Date de pr√©l√®vement: {date_prelevement.strftime('%d/%m/%Y')}")
    c.drawString(2*cm, height - 5.5*cm, f"Date de r√©sultat: {date_resultat.strftime('%d/%m/%Y')}")

    # M√©decin prescripteur
    c.drawString(2*cm, height - 6*cm, f"Prescripteur: {random.choice(MEDECINS)}")

    # Ligne
    c.line(2*cm, height - 6.5*cm, width - 2*cm, height - 6.5*cm)

    # R√©sultats
    c.setFont("Helvetica-Bold", 11)
    c.drawString(2*cm, height - 8*cm, "R√âSULTATS D'ANALYSES")

    # Tableau
    y_pos = height - 9*cm
    c.setFont("Helvetica-Bold", 9)
    c.drawString(2*cm, y_pos, "Examen")
    c.drawString(10*cm, y_pos, "R√©sultat")
    c.drawString(13*cm, y_pos, "Valeurs de r√©f√©rence")
    c.drawString(17*cm, y_pos, "Unit√©")

    y_pos -= 0.5*cm
    c.line(2*cm, y_pos, width - 2*cm, y_pos)

    # Exemples de r√©sultats
    resultats = [
        ("Glyc√©mie", "0.95", "0.70 - 1.10", "g/L"),
        ("Cholest√©rol total", "1.85", "< 2.00", "g/L"),
        ("HDL Cholest√©rol", "0.52", "> 0.40", "g/L"),
        ("LDL Cholest√©rol", "1.15", "< 1.60", "g/L"),
        ("Triglyc√©rides", "0.98", "< 1.50", "g/L"),
        ("Cr√©atinin√©mie", "9.5", "7.0 - 13.0", "mg/L"),
        ("TSH", "2.1", "0.4 - 4.0", "mUI/L"),
    ]

    nb_examens = random.randint(4, 7)
    examens_choisis = random.sample(resultats, nb_examens)

    c.setFont("Helvetica", 9)
    y_pos -= 0.5*cm
    for examen, resultat, ref, unite in examens_choisis:
        c.drawString(2*cm, y_pos, examen)
        c.drawString(10*cm, y_pos, resultat)
        c.drawString(13*cm, y_pos, ref)
        c.drawString(17*cm, y_pos, unite)
        y_pos -= 0.7*cm

    # Signature
    c.setFont("Helvetica-Oblique", 8)
    c.drawString(2*cm, 3*cm, "Document valid√© √©lectroniquement")
    c.drawString(2*cm, 2.5*cm, f"Dr. BIOTECH - Biologiste responsable")

    c.save()

def generate_courrier_medical(file_path, patient_nom, patient_prenom):
    """G√©n√®re un courrier m√©dical"""
    c = canvas.Canvas(file_path, pagesize=A4)
    width, height = A4

    medecin_expediteur = random.choice(MEDECINS)
    medecin_destinataire = random.choice([m for m in MEDECINS if m != medecin_expediteur])

    # En-t√™te exp√©diteur
    c.setFont("Helvetica-Bold", 11)
    c.drawString(2*cm, height - 2*cm, medecin_expediteur)
    c.setFont("Helvetica", 9)
    c.drawString(2*cm, height - 2.5*cm, "Service de Cardiologie")
    c.drawString(2*cm, height - 3*cm, "H√¥pital Saint-Antoine")
    c.drawString(2*cm, height - 3.5*cm, "184 Rue du Faubourg Saint-Antoine, 75012 Paris")

    # Destinataire
    c.setFont("Helvetica", 9)
    c.drawString(12*cm, height - 3*cm, f"√Ä l'attention de {medecin_destinataire}")
    c.drawString(12*cm, height - 3.5*cm, "M√©decin traitant")

    # Date
    date = datetime.now() - timedelta(days=random.randint(0, 15))
    c.drawString(12*cm, height - 5*cm, f"Le {date.strftime('%d/%m/%Y')}")

    # Objet
    c.setFont("Helvetica-Bold", 10)
    c.drawString(2*cm, height - 6*cm, "Objet: Compte-rendu de consultation")

    # Patient
    c.setFont("Helvetica-Bold", 11)
    c.drawString(2*cm, height - 7*cm, f"Patient: {patient_nom} {patient_prenom}")

    # Corps du courrier
    c.setFont("Helvetica", 10)
    y_pos = height - 8.5*cm

    textes = [
        "Cher confr√®re,",
        "",
        f"J'ai re√ßu en consultation votre patient(e), {patient_prenom} {patient_nom}.",
        "",
        "Motif de consultation: Bilan de sant√© annuel / Suivi m√©dical",
        "",
        "Examen clinique:",
        "- √âtat g√©n√©ral conserv√©",
        "- Tension art√©rielle: 130/80 mmHg",
        "- Fr√©quence cardiaque: 72 bpm",
        "- Auscultation cardio-pulmonaire normale",
        "",
        "Conclusion:",
        "Patient en bon √©tat g√©n√©ral. Poursuite du traitement en cours.",
        "Nouvelle consultation dans 6 mois pour suivi.",
        "",
        "Je reste √† votre disposition pour tout renseignement compl√©mentaire.",
        "",
        "Confraternellement,",
    ]

    for ligne in textes:
        c.drawString(2*cm, y_pos, ligne)
        y_pos -= 0.6*cm

    # Signature
    c.setFont("Helvetica-Oblique", 9)
    c.drawString(2*cm, 4*cm, medecin_expediteur)

    c.save()

def main():
    """G√©n√®re tous les documents de test"""
    output_dir = "documents_test"

    # Cr√©er le dossier de sortie s'il n'existe pas
    os.makedirs(output_dir, exist_ok=True)

    print("üè• G√©n√©ration de documents m√©dicaux de test pour M√©distory")
    print("=" * 60)

    documents_generes = []

    # G√©n√©rer 10 ordonnances
    print("\nüìã G√©n√©ration de 10 ordonnances...")
    for i in range(1, 11):
        nom = random.choice(NOMS)
        prenom = random.choice(PRENOMS)
        filename = f"ordonnance_{i:02d}_{nom}_{prenom}.pdf"
        filepath = os.path.join(output_dir, filename)
        generate_ordonnance(filepath, nom, prenom)
        documents_generes.append((filename, "Ordonnance", f"{nom} {prenom}"))
        print(f"  ‚úì {filename}")

    # G√©n√©rer 5 r√©sultats de laboratoire
    print("\nüî¨ G√©n√©ration de 5 r√©sultats de laboratoire...")
    for i in range(1, 6):
        nom = random.choice(NOMS)
        prenom = random.choice(PRENOMS)
        filename = f"labo_{i:02d}_{nom}_{prenom}.pdf"
        filepath = os.path.join(output_dir, filename)
        generate_resultat_labo(filepath, nom, prenom)
        documents_generes.append((filename, "R√©sultat labo", f"{nom} {prenom}"))
        print(f"  ‚úì {filename}")

    # G√©n√©rer 5 courriers m√©dicaux
    print("\n‚úâÔ∏è G√©n√©ration de 5 courriers m√©dicaux...")
    for i in range(1, 6):
        nom = random.choice(NOMS)
        prenom = random.choice(PRENOMS)
        filename = f"courrier_{i:02d}_{nom}_{prenom}.pdf"
        filepath = os.path.join(output_dir, filename)
        generate_courrier_medical(filepath, nom, prenom)
        documents_generes.append((filename, "Courrier", f"{nom} {prenom}"))
        print(f"  ‚úì {filename}")

    print("\n" + "=" * 60)
    print(f"‚úÖ {len(documents_generes)} documents g√©n√©r√©s avec succ√®s!")
    print(f"üìÅ Dossier: {os.path.abspath(output_dir)}")

    # R√©sum√©
    print("\nüìä R√©sum√©:")
    print(f"  - Ordonnances: 10")
    print(f"  - R√©sultats de laboratoire: 5")
    print(f"  - Courriers m√©dicaux: 5")
    print(f"  - Total: 20 documents")

if __name__ == "__main__":
    main()
